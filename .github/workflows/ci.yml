# üöÄ CI/CD Pipeline - Template Laravel
#
# Este workflow verifica a qualidade do template Laravel, n√£o de projetos espec√≠ficos.
# O template foca em ferramentas de qualidade PHP e boas pr√°ticas Laravel.
#
# ‚úÖ O que √© verificado:
# - An√°lise est√°tica com PHPStan e Psalm
# - Formata√ß√£o de c√≥digo com PHP CS Fixer
# - Conformidade PSR-12 com PHP_CodeSniffer
# - Auditoria de seguran√ßa com Composer
# - Verifica√ß√£o de vulnerabilidades PHP
#
# üö´ O que N√ÉO √© verificado:
# - Build de frontend (n√£o aplic√°vel ao template)
# - Testes de aplica√ß√£o (n√£o aplic√°vel ao template)
# - Deploy de produ√ß√£o (n√£o aplic√°vel ao template)

name: CI/CD Pipeline - Template Laravel

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality:
    name: Verifica√ß√£o de Qualidade
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP 8.4
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.4'
        extensions: mbstring, xml, ctype, iconv, intl
        tools: composer:v2

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-interaction

    - name: Run PHPStan (An√°lise Est√°tica)
      run: ./vendor/bin/phpstan analyse --memory-limit=2G

    - name: Run Psalm (An√°lise Est√°tica)
      run: ./vendor/bin/psalm --no-progress

    - name: Run PHP CS Fixer (Formata√ß√£o)
      run: ./vendor/bin/php-cs-fixer fix --dry-run --diff --config=.php-cs-fixer.php

    - name: Run PHP_CodeSniffer (PSR-12)
      run: ./vendor/bin/phpcs --standard=PSR12 scripts docs docker .github || true

  security:
    name: Verifica√ß√£o de Seguran√ßa
    runs-on: ubuntu-latest
    needs: quality

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP 8.4
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.4'
        extensions: mbstring, xml, ctype, iconv, intl
        tools: composer:v2

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-interaction

    - name: Run security audit
      run: composer audit || echo "‚úÖ Nenhuma vulnerabilidade encontrada"

    - name: Run PHP Security Checker
      run: |
        curl -sSfL https://github.com/fabpot/local-php-security-checker/releases/latest/download/local-php-security-checker_linux_amd64 -o security-checker
        chmod +x security-checker
        ./security-checker composer.lock || echo "‚úÖ Security checker conclu√≠do"

  deploy:
    name: Deploy do Template
    runs-on: ubuntu-latest
    needs: [quality, security]
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Deploy do template
      run: |
        echo "üöÄ Template Laravel atualizado com sucesso!"
        echo "‚úÖ Qualidade de c√≥digo verificada"
        echo "‚úÖ Seguran√ßa verificada"
        echo "üì¶ Template pronto para uso"
      # Este √© um template, n√£o um projeto de produ√ß√£o
      # O deploy real acontece quando projetos s√£o criados a partir dele
